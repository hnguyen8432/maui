<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.solers.container</groupId>
    <artifactId>parent</artifactId>
    <version>1.0</version>

    <packaging>pom</packaging>

    <modules>
        <module>apps</module>
        <module>support</module>
    </modules>
    
    <properties>
        <java.version>8</java.version>
        <maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>2.1.7.RELEASE</spring-boot.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <repository-account>paradise22</repository-account>

        <!-- json -->
        <jackson.version>2.10.0</jackson.version>

        <!-- Camel -->
        <camel.version>2.24.2</camel.version>

        <!-- ActiveMQ -->
        <activemq.version>5.15.9</activemq.version>

        <!-- Redisson: Redis Client API -->
        <redisson.version>3.6.5</redisson.version>

        <spring.framework.version>5.1.6.RELEASE</spring.framework.version>

        <!-- Misc -->
        <apache.lang.version>3.8.1</apache.lang.version>

        <!-- Collections -->
        <guava.version>27.1-jre</guava.version>
        <commons-collections4.version>4.3</commons-collections4.version>
        <javax.jms-api.version>2.0.1</javax.jms-api.version>
        <java-version>1.8</java-version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- camel -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-jackson</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-stream</artifactId>
                <version>${camel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-camel</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test-spring</artifactId>
                <version>${camel.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>javax.jms</groupId>
                <artifactId>javax.jms-api</artifactId>
                <version>${javax.jms-api.version}</version>
            </dependency>

            <!-- json / jaxrs -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-json-org</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Redisson : Redis Client API -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <!-- For ActiveMQ connection -->
            <dependency>
                <groupId>com.solers.skyfire</groupId>
                <artifactId>data-common</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- For log4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>2.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>2.7</version>
            </dependency>

            <!-- MISC -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
        </profile>
    </profiles>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>4.3.0</version>
                    <configuration>
                        <skip>true</skip>
                        <!-- Applicable when for maven goal fabric8:build. Comment out to default to DockerHub
                        <registry>${registry-pull-url}</registry> -->
                        <verbose>true</verbose>
                        <!--  Proof of concept for testing fabric8:push. Will use certificate o communicate to Docker repository
                              Alternatively use system properties registry.username, registry.password  or docker login
                        <authConfig>
                            <username>login</username>
                            <password>password</password>
                        </authConfig>
                        -->
                        <mode>auto</mode>
                        <images>
                            <image>
                                <name>${repository-account}/%a:%v</name>
                                <!-- Applicable when for maven goal fabric8:push. Default to dockerhub if none is set
                                <registry>${registry-push-url}</registry> -->
                                <build>
                                    <contextDir>${project.basedir}</contextDir>
                                    <dockerFile>Dockerfile</dockerFile>
                                    <tags>
                                        <tag>latest</tag>
                                    </tags>
                                </build>
                            </image>
                        </images>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java-version}</source>
                        <target>${java-version}</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
